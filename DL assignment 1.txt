{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPE2+DUAKRbt477Hl/GVejG"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"Eus_WzmW_VvC","executionInfo":{"status":"ok","timestamp":1684684015147,"user_tz":-330,"elapsed":632,"user":{"displayName":"Mitesh Khandait","userId":"17886586617487237141"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","from tensorflow import keras\n","import matplotlib.pyplot as plt\n","import seaborn as sns"]},{"cell_type":"code","source":["!wget \"https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-I6szr-D_gwi","executionInfo":{"status":"ok","timestamp":1684684087599,"user_tz":-330,"elapsed":382,"user":{"displayName":"Mitesh Khandait","userId":"17886586617487237141"}},"outputId":"d0cababe-ff4b-4402-e5b9-9b0893453f94"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["--2023-05-21 15:48:06--  https://raw.githubusercontent.com/selva86/datasets/master/BostonHousing.csv\n","Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.111.133, 185.199.110.133, ...\n","Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 35735 (35K) [text/plain]\n","Saving to: ‘BostonHousing.csv’\n","\n","\rBostonHousing.csv     0%[                    ]       0  --.-KB/s               \rBostonHousing.csv   100%[===================>]  34.90K  --.-KB/s    in 0.001s  \n","\n","2023-05-21 15:48:07 (25.3 MB/s) - ‘BostonHousing.csv’ saved [35735/35735]\n","\n"]}]},{"cell_type":"code","source":["df = pd.read_csv(\"BostonHousing.csv\")"],"metadata":{"id":"RY4i8arm_1Ix","executionInfo":{"status":"ok","timestamp":1684684111455,"user_tz":-330,"elapsed":361,"user":{"displayName":"Mitesh Khandait","userId":"17886586617487237141"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"XYgi5e0y_4ya","executionInfo":{"status":"ok","timestamp":1684684124565,"user_tz":-330,"elapsed":391,"user":{"displayName":"Mitesh Khandait","userId":"17886586617487237141"}},"outputId":"4cbaa501-62fd-4bbc-8525-aefd989b5893"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        crim    zn  indus  chas    nox     rm   age     dis  rad  tax  \\\n","0    0.00632  18.0   2.31     0  0.538  6.575  65.2  4.0900    1  296   \n","1    0.02731   0.0   7.07     0  0.469  6.421  78.9  4.9671    2  242   \n","2    0.02729   0.0   7.07     0  0.469  7.185  61.1  4.9671    2  242   \n","3    0.03237   0.0   2.18     0  0.458  6.998  45.8  6.0622    3  222   \n","4    0.06905   0.0   2.18     0  0.458  7.147  54.2  6.0622    3  222   \n","..       ...   ...    ...   ...    ...    ...   ...     ...  ...  ...   \n","501  0.06263   0.0  11.93     0  0.573  6.593  69.1  2.4786    1  273   \n","502  0.04527   0.0  11.93     0  0.573  6.120  76.7  2.2875    1  273   \n","503  0.06076   0.0  11.93     0  0.573  6.976  91.0  2.1675    1  273   \n","504  0.10959   0.0  11.93     0  0.573  6.794  89.3  2.3889    1  273   \n","505  0.04741   0.0  11.93     0  0.573  6.030  80.8  2.5050    1  273   \n","\n","     ptratio       b  lstat  medv  \n","0       15.3  396.90   4.98  24.0  \n","1       17.8  396.90   9.14  21.6  \n","2       17.8  392.83   4.03  34.7  \n","3       18.7  394.63   2.94  33.4  \n","4       18.7  396.90   5.33  36.2  \n","..       ...     ...    ...   ...  \n","501     21.0  391.99   9.67  22.4  \n","502     21.0  396.90   9.08  20.6  \n","503     21.0  396.90   5.64  23.9  \n","504     21.0  393.45   6.48  22.0  \n","505     21.0  396.90   7.88  11.9  \n","\n","[506 rows x 14 columns]"],"text/html":["\n","  <div id=\"df-af6c4e99-3d3b-45ad-992c-824f56801d2a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crim</th>\n","      <th>zn</th>\n","      <th>indus</th>\n","      <th>chas</th>\n","      <th>nox</th>\n","      <th>rm</th>\n","      <th>age</th>\n","      <th>dis</th>\n","      <th>rad</th>\n","      <th>tax</th>\n","      <th>ptratio</th>\n","      <th>b</th>\n","      <th>lstat</th>\n","      <th>medv</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.00632</td>\n","      <td>18.0</td>\n","      <td>2.31</td>\n","      <td>0</td>\n","      <td>0.538</td>\n","      <td>6.575</td>\n","      <td>65.2</td>\n","      <td>4.0900</td>\n","      <td>1</td>\n","      <td>296</td>\n","      <td>15.3</td>\n","      <td>396.90</td>\n","      <td>4.98</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.02731</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0</td>\n","      <td>0.469</td>\n","      <td>6.421</td>\n","      <td>78.9</td>\n","      <td>4.9671</td>\n","      <td>2</td>\n","      <td>242</td>\n","      <td>17.8</td>\n","      <td>396.90</td>\n","      <td>9.14</td>\n","      <td>21.6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.02729</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0</td>\n","      <td>0.469</td>\n","      <td>7.185</td>\n","      <td>61.1</td>\n","      <td>4.9671</td>\n","      <td>2</td>\n","      <td>242</td>\n","      <td>17.8</td>\n","      <td>392.83</td>\n","      <td>4.03</td>\n","      <td>34.7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.03237</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0</td>\n","      <td>0.458</td>\n","      <td>6.998</td>\n","      <td>45.8</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222</td>\n","      <td>18.7</td>\n","      <td>394.63</td>\n","      <td>2.94</td>\n","      <td>33.4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.06905</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0</td>\n","      <td>0.458</td>\n","      <td>7.147</td>\n","      <td>54.2</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222</td>\n","      <td>18.7</td>\n","      <td>396.90</td>\n","      <td>5.33</td>\n","      <td>36.2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>501</th>\n","      <td>0.06263</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.593</td>\n","      <td>69.1</td>\n","      <td>2.4786</td>\n","      <td>1</td>\n","      <td>273</td>\n","      <td>21.0</td>\n","      <td>391.99</td>\n","      <td>9.67</td>\n","      <td>22.4</td>\n","    </tr>\n","    <tr>\n","      <th>502</th>\n","      <td>0.04527</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.120</td>\n","      <td>76.7</td>\n","      <td>2.2875</td>\n","      <td>1</td>\n","      <td>273</td>\n","      <td>21.0</td>\n","      <td>396.90</td>\n","      <td>9.08</td>\n","      <td>20.6</td>\n","    </tr>\n","    <tr>\n","      <th>503</th>\n","      <td>0.06076</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.976</td>\n","      <td>91.0</td>\n","      <td>2.1675</td>\n","      <td>1</td>\n","      <td>273</td>\n","      <td>21.0</td>\n","      <td>396.90</td>\n","      <td>5.64</td>\n","      <td>23.9</td>\n","    </tr>\n","    <tr>\n","      <th>504</th>\n","      <td>0.10959</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.794</td>\n","      <td>89.3</td>\n","      <td>2.3889</td>\n","      <td>1</td>\n","      <td>273</td>\n","      <td>21.0</td>\n","      <td>393.45</td>\n","      <td>6.48</td>\n","      <td>22.0</td>\n","    </tr>\n","    <tr>\n","      <th>505</th>\n","      <td>0.04741</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.030</td>\n","      <td>80.8</td>\n","      <td>2.5050</td>\n","      <td>1</td>\n","      <td>273</td>\n","      <td>21.0</td>\n","      <td>396.90</td>\n","      <td>7.88</td>\n","      <td>11.9</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>506 rows × 14 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af6c4e99-3d3b-45ad-992c-824f56801d2a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-af6c4e99-3d3b-45ad-992c-824f56801d2a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-af6c4e99-3d3b-45ad-992c-824f56801d2a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.describe().T"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"i9tlK8p5_9S1","executionInfo":{"status":"ok","timestamp":1684684152020,"user_tz":-330,"elapsed":376,"user":{"displayName":"Mitesh Khandait","userId":"17886586617487237141"}},"outputId":"1d12a1a2-64bf-445b-f1a3-4ba6dca7087e"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         count        mean         std        min         25%        50%  \\\n","crim     506.0    3.613524    8.601545    0.00632    0.082045    0.25651   \n","zn       506.0   11.363636   23.322453    0.00000    0.000000    0.00000   \n","indus    506.0   11.136779    6.860353    0.46000    5.190000    9.69000   \n","chas     506.0    0.069170    0.253994    0.00000    0.000000    0.00000   \n","nox      506.0    0.554695    0.115878    0.38500    0.449000    0.53800   \n","rm       506.0    6.284634    0.702617    3.56100    5.885500    6.20850   \n","age      506.0   68.574901   28.148861    2.90000   45.025000   77.50000   \n","dis      506.0    3.795043    2.105710    1.12960    2.100175    3.20745   \n","rad      506.0    9.549407    8.707259    1.00000    4.000000    5.00000   \n","tax      506.0  408.237154  168.537116  187.00000  279.000000  330.00000   \n","ptratio  506.0   18.455534    2.164946   12.60000   17.400000   19.05000   \n","b        506.0  356.674032   91.294864    0.32000  375.377500  391.44000   \n","lstat    506.0   12.653063    7.141062    1.73000    6.950000   11.36000   \n","medv     506.0   22.532806    9.197104    5.00000   17.025000   21.20000   \n","\n","                75%       max  \n","crim       3.677083   88.9762  \n","zn        12.500000  100.0000  \n","indus     18.100000   27.7400  \n","chas       0.000000    1.0000  \n","nox        0.624000    0.8710  \n","rm         6.623500    8.7800  \n","age       94.075000  100.0000  \n","dis        5.188425   12.1265  \n","rad       24.000000   24.0000  \n","tax      666.000000  711.0000  \n","ptratio   20.200000   22.0000  \n","b        396.225000  396.9000  \n","lstat     16.955000   37.9700  \n","medv      25.000000   50.0000  "],"text/html":["\n","  <div id=\"df-d3916bda-a0f4-49d0-bccc-e18e7e9e173f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","      <th>mean</th>\n","      <th>std</th>\n","      <th>min</th>\n","      <th>25%</th>\n","      <th>50%</th>\n","      <th>75%</th>\n","      <th>max</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>crim</th>\n","      <td>506.0</td>\n","      <td>3.613524</td>\n","      <td>8.601545</td>\n","      <td>0.00632</td>\n","      <td>0.082045</td>\n","      <td>0.25651</td>\n","      <td>3.677083</td>\n","      <td>88.9762</td>\n","    </tr>\n","    <tr>\n","      <th>zn</th>\n","      <td>506.0</td>\n","      <td>11.363636</td>\n","      <td>23.322453</td>\n","      <td>0.00000</td>\n","      <td>0.000000</td>\n","      <td>0.00000</td>\n","      <td>12.500000</td>\n","      <td>100.0000</td>\n","    </tr>\n","    <tr>\n","      <th>indus</th>\n","      <td>506.0</td>\n","      <td>11.136779</td>\n","      <td>6.860353</td>\n","      <td>0.46000</td>\n","      <td>5.190000</td>\n","      <td>9.69000</td>\n","      <td>18.100000</td>\n","      <td>27.7400</td>\n","    </tr>\n","    <tr>\n","      <th>chas</th>\n","      <td>506.0</td>\n","      <td>0.069170</td>\n","      <td>0.253994</td>\n","      <td>0.00000</td>\n","      <td>0.000000</td>\n","      <td>0.00000</td>\n","      <td>0.000000</td>\n","      <td>1.0000</td>\n","    </tr>\n","    <tr>\n","      <th>nox</th>\n","      <td>506.0</td>\n","      <td>0.554695</td>\n","      <td>0.115878</td>\n","      <td>0.38500</td>\n","      <td>0.449000</td>\n","      <td>0.53800</td>\n","      <td>0.624000</td>\n","      <td>0.8710</td>\n","    </tr>\n","    <tr>\n","      <th>rm</th>\n","      <td>506.0</td>\n","      <td>6.284634</td>\n","      <td>0.702617</td>\n","      <td>3.56100</td>\n","      <td>5.885500</td>\n","      <td>6.20850</td>\n","      <td>6.623500</td>\n","      <td>8.7800</td>\n","    </tr>\n","    <tr>\n","      <th>age</th>\n","      <td>506.0</td>\n","      <td>68.574901</td>\n","      <td>28.148861</td>\n","      <td>2.90000</td>\n","      <td>45.025000</td>\n","      <td>77.50000</td>\n","      <td>94.075000</td>\n","      <td>100.0000</td>\n","    </tr>\n","    <tr>\n","      <th>dis</th>\n","      <td>506.0</td>\n","      <td>3.795043</td>\n","      <td>2.105710</td>\n","      <td>1.12960</td>\n","      <td>2.100175</td>\n","      <td>3.20745</td>\n","      <td>5.188425</td>\n","      <td>12.1265</td>\n","    </tr>\n","    <tr>\n","      <th>rad</th>\n","      <td>506.0</td>\n","      <td>9.549407</td>\n","      <td>8.707259</td>\n","      <td>1.00000</td>\n","      <td>4.000000</td>\n","      <td>5.00000</td>\n","      <td>24.000000</td>\n","      <td>24.0000</td>\n","    </tr>\n","    <tr>\n","      <th>tax</th>\n","      <td>506.0</td>\n","      <td>408.237154</td>\n","      <td>168.537116</td>\n","      <td>187.00000</td>\n","      <td>279.000000</td>\n","      <td>330.00000</td>\n","      <td>666.000000</td>\n","      <td>711.0000</td>\n","    </tr>\n","    <tr>\n","      <th>ptratio</th>\n","      <td>506.0</td>\n","      <td>18.455534</td>\n","      <td>2.164946</td>\n","      <td>12.60000</td>\n","      <td>17.400000</td>\n","      <td>19.05000</td>\n","      <td>20.200000</td>\n","      <td>22.0000</td>\n","    </tr>\n","    <tr>\n","      <th>b</th>\n","      <td>506.0</td>\n","      <td>356.674032</td>\n","      <td>91.294864</td>\n","      <td>0.32000</td>\n","      <td>375.377500</td>\n","      <td>391.44000</td>\n","      <td>396.225000</td>\n","      <td>396.9000</td>\n","    </tr>\n","    <tr>\n","      <th>lstat</th>\n","      <td>506.0</td>\n","      <td>12.653063</td>\n","      <td>7.141062</td>\n","      <td>1.73000</td>\n","      <td>6.950000</td>\n","      <td>11.36000</td>\n","      <td>16.955000</td>\n","      <td>37.9700</td>\n","    </tr>\n","    <tr>\n","      <th>medv</th>\n","      <td>506.0</td>\n","      <td>22.532806</td>\n","      <td>9.197104</td>\n","      <td>5.00000</td>\n","      <td>17.025000</td>\n","      <td>21.20000</td>\n","      <td>25.000000</td>\n","      <td>50.0000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d3916bda-a0f4-49d0-bccc-e18e7e9e173f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-d3916bda-a0f4-49d0-bccc-e18e7e9e173f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-d3916bda-a0f4-49d0-bccc-e18e7e9e173f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ViylkTJ7AERZ","executionInfo":{"status":"ok","timestamp":1684684167344,"user_tz":-330,"elapsed":515,"user":{"displayName":"Mitesh Khandait","userId":"17886586617487237141"}},"outputId":"8d427242-67f4-4e41-d519-8715fd764233"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["crim       0\n","zn         0\n","indus      0\n","chas       0\n","nox        0\n","rm         0\n","age        0\n","dis        0\n","rad        0\n","tax        0\n","ptratio    0\n","b          0\n","lstat      0\n","medv       0\n","dtype: int64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.isnull().values.any()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BhH5KWAEAIyh","executionInfo":{"status":"ok","timestamp":1684684185253,"user_tz":-330,"elapsed":379,"user":{"displayName":"Mitesh Khandait","userId":"17886586617487237141"}},"outputId":"fc1d541c-c5b5-4c5f-bef0-dccc26bdbf06"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["X = df.drop('medv', axis=1)\n","y = df['medv']"],"metadata":{"id":"H7Gl3TDsAKTp","executionInfo":{"status":"ok","timestamp":1684684198354,"user_tz":-330,"elapsed":364,"user":{"displayName":"Mitesh Khandait","userId":"17886586617487237141"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.metrics import mean_squared_error, r2_score"],"metadata":{"id":"phdn4ZQIAR5J","executionInfo":{"status":"ok","timestamp":1684684228843,"user_tz":-330,"elapsed":513,"user":{"displayName":"Mitesh Khandait","userId":"17886586617487237141"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","# Scale the data using StandardScaler\n","scaler = StandardScaler()\n","X_train_scaled = scaler.fit_transform(X_train)\n","X_test_scaled = scaler.transform(X_test)"],"metadata":{"id":"kSKoRIO3AU2B","executionInfo":{"status":"ok","timestamp":1684684248100,"user_tz":-330,"elapsed":401,"user":{"displayName":"Mitesh Khandait","userId":"17886586617487237141"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["X_train"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Nhj2VliFAaPh","executionInfo":{"status":"ok","timestamp":1684684264180,"user_tz":-330,"elapsed":627,"user":{"displayName":"Mitesh Khandait","userId":"17886586617487237141"}},"outputId":"e0e731e4-72cb-4bb9-f497-c9eea13bf7dc"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         crim    zn  indus  chas     nox     rm   age     dis  rad  tax  \\\n","477  15.02340   0.0  18.10     0  0.6140  5.304  97.3  2.1007   24  666   \n","15    0.62739   0.0   8.14     0  0.5380  5.834  56.5  4.4986    4  307   \n","332   0.03466  35.0   6.06     0  0.4379  6.031  23.3  6.6407    1  304   \n","423   7.05042   0.0  18.10     0  0.6140  6.103  85.1  2.0218   24  666   \n","19    0.72580   0.0   8.14     0  0.5380  5.727  69.5  3.7965    4  307   \n","..        ...   ...    ...   ...     ...    ...   ...     ...  ...  ...   \n","106   0.17120   0.0   8.56     0  0.5200  5.836  91.9  2.2110    5  384   \n","270   0.29916  20.0   6.96     0  0.4640  5.856  42.1  4.4290    3  223   \n","348   0.01501  80.0   2.01     0  0.4350  6.635  29.7  8.3440    4  280   \n","435  11.16040   0.0  18.10     0  0.7400  6.629  94.6  2.1247   24  666   \n","102   0.22876   0.0   8.56     0  0.5200  6.405  85.4  2.7147    5  384   \n","\n","     ptratio       b  lstat  \n","477     20.2  349.48  24.91  \n","15      21.0  395.62   8.47  \n","332     16.9  362.25   7.83  \n","423     20.2    2.52  23.29  \n","19      21.0  390.95  11.28  \n","..       ...     ...    ...  \n","106     20.9  395.67  18.66  \n","270     18.6  388.65  13.00  \n","348     17.0  390.94   5.99  \n","435     20.2  109.85  23.27  \n","102     20.9   70.80  10.63  \n","\n","[404 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-eccd8abc-e43d-4076-a039-f4f9d75f1d6b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crim</th>\n","      <th>zn</th>\n","      <th>indus</th>\n","      <th>chas</th>\n","      <th>nox</th>\n","      <th>rm</th>\n","      <th>age</th>\n","      <th>dis</th>\n","      <th>rad</th>\n","      <th>tax</th>\n","      <th>ptratio</th>\n","      <th>b</th>\n","      <th>lstat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>477</th>\n","      <td>15.02340</td>\n","      <td>0.0</td>\n","      <td>18.10</td>\n","      <td>0</td>\n","      <td>0.6140</td>\n","      <td>5.304</td>\n","      <td>97.3</td>\n","      <td>2.1007</td>\n","      <td>24</td>\n","      <td>666</td>\n","      <td>20.2</td>\n","      <td>349.48</td>\n","      <td>24.91</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>0.62739</td>\n","      <td>0.0</td>\n","      <td>8.14</td>\n","      <td>0</td>\n","      <td>0.5380</td>\n","      <td>5.834</td>\n","      <td>56.5</td>\n","      <td>4.4986</td>\n","      <td>4</td>\n","      <td>307</td>\n","      <td>21.0</td>\n","      <td>395.62</td>\n","      <td>8.47</td>\n","    </tr>\n","    <tr>\n","      <th>332</th>\n","      <td>0.03466</td>\n","      <td>35.0</td>\n","      <td>6.06</td>\n","      <td>0</td>\n","      <td>0.4379</td>\n","      <td>6.031</td>\n","      <td>23.3</td>\n","      <td>6.6407</td>\n","      <td>1</td>\n","      <td>304</td>\n","      <td>16.9</td>\n","      <td>362.25</td>\n","      <td>7.83</td>\n","    </tr>\n","    <tr>\n","      <th>423</th>\n","      <td>7.05042</td>\n","      <td>0.0</td>\n","      <td>18.10</td>\n","      <td>0</td>\n","      <td>0.6140</td>\n","      <td>6.103</td>\n","      <td>85.1</td>\n","      <td>2.0218</td>\n","      <td>24</td>\n","      <td>666</td>\n","      <td>20.2</td>\n","      <td>2.52</td>\n","      <td>23.29</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>0.72580</td>\n","      <td>0.0</td>\n","      <td>8.14</td>\n","      <td>0</td>\n","      <td>0.5380</td>\n","      <td>5.727</td>\n","      <td>69.5</td>\n","      <td>3.7965</td>\n","      <td>4</td>\n","      <td>307</td>\n","      <td>21.0</td>\n","      <td>390.95</td>\n","      <td>11.28</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>106</th>\n","      <td>0.17120</td>\n","      <td>0.0</td>\n","      <td>8.56</td>\n","      <td>0</td>\n","      <td>0.5200</td>\n","      <td>5.836</td>\n","      <td>91.9</td>\n","      <td>2.2110</td>\n","      <td>5</td>\n","      <td>384</td>\n","      <td>20.9</td>\n","      <td>395.67</td>\n","      <td>18.66</td>\n","    </tr>\n","    <tr>\n","      <th>270</th>\n","      <td>0.29916</td>\n","      <td>20.0</td>\n","      <td>6.96</td>\n","      <td>0</td>\n","      <td>0.4640</td>\n","      <td>5.856</td>\n","      <td>42.1</td>\n","      <td>4.4290</td>\n","      <td>3</td>\n","      <td>223</td>\n","      <td>18.6</td>\n","      <td>388.65</td>\n","      <td>13.00</td>\n","    </tr>\n","    <tr>\n","      <th>348</th>\n","      <td>0.01501</td>\n","      <td>80.0</td>\n","      <td>2.01</td>\n","      <td>0</td>\n","      <td>0.4350</td>\n","      <td>6.635</td>\n","      <td>29.7</td>\n","      <td>8.3440</td>\n","      <td>4</td>\n","      <td>280</td>\n","      <td>17.0</td>\n","      <td>390.94</td>\n","      <td>5.99</td>\n","    </tr>\n","    <tr>\n","      <th>435</th>\n","      <td>11.16040</td>\n","      <td>0.0</td>\n","      <td>18.10</td>\n","      <td>0</td>\n","      <td>0.7400</td>\n","      <td>6.629</td>\n","      <td>94.6</td>\n","      <td>2.1247</td>\n","      <td>24</td>\n","      <td>666</td>\n","      <td>20.2</td>\n","      <td>109.85</td>\n","      <td>23.27</td>\n","    </tr>\n","    <tr>\n","      <th>102</th>\n","      <td>0.22876</td>\n","      <td>0.0</td>\n","      <td>8.56</td>\n","      <td>0</td>\n","      <td>0.5200</td>\n","      <td>6.405</td>\n","      <td>85.4</td>\n","      <td>2.7147</td>\n","      <td>5</td>\n","      <td>384</td>\n","      <td>20.9</td>\n","      <td>70.80</td>\n","      <td>10.63</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>404 rows × 13 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eccd8abc-e43d-4076-a039-f4f9d75f1d6b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-eccd8abc-e43d-4076-a039-f4f9d75f1d6b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-eccd8abc-e43d-4076-a039-f4f9d75f1d6b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["# from tensorflow import keras\n","from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense"],"metadata":{"id":"eBk6HPSgAeyy","executionInfo":{"status":"ok","timestamp":1684684281741,"user_tz":-330,"elapsed":369,"user":{"displayName":"Mitesh Khandait","userId":"17886586617487237141"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["model = Sequential()\n","model.add(Dense(100, activation='relu', input_shape=(X_train_scaled.shape[1],)))\n","model.add(Dense(50, activation='relu'))\n","model.add(Dense(1))\n","\n","# Compile the model\n","model.compile(loss='mean_squared_error', optimizer='adam')\n","\n","# Train the model\n","history = model.fit(X_train_scaled, y_train, epochs=100, batch_size=32, validation_data=(X_test_scaled, y_test), verbose=0)"],"metadata":{"id":"hSsy09TsAiEh","executionInfo":{"status":"ok","timestamp":1684684313189,"user_tz":-330,"elapsed":11936,"user":{"displayName":"Mitesh Khandait","userId":"17886586617487237141"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["plt.figure(figsize=(10, 6))\n","plt.plot(history.history['loss'], label='Training Loss')\n","plt.plot(history.history['val_loss'], label='Validation Loss')\n","plt.title('Training and Validation Loss')\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","plt.legend()\n","plt.show()\n","\n","# Predict on the test set\n","y_pred = model.predict(X_test_scaled)\n","\n","# Calculate metrics\n","mse = mean_squared_error(y_test, y_pred)\n","r2 = r2_score(y_test, y_pred)\n","\n","print(\"Mean Squared Error:\", mse)\n","print(\"R2 Score:\", r2)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":616},"id":"WK5ebWsKAsxb","executionInfo":{"status":"ok","timestamp":1684684370923,"user_tz":-330,"elapsed":2026,"user":{"displayName":"Mitesh Khandait","userId":"17886586617487237141"}},"outputId":"d2506a99-8ecf-47f1-88d9-94f820f48645"},"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["4/4 [==============================] - 0s 8ms/step\n","Mean Squared Error: 11.385659121958723\n","R2 Score: 0.8447419643267647\n"]}]},{"cell_type":"code","source":["model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lKZzhwBZBKhi","executionInfo":{"status":"ok","timestamp":1684684463593,"user_tz":-330,"elapsed":380,"user":{"displayName":"Mitesh Khandait","userId":"17886586617487237141"}},"outputId":"e8810389-8c48-417c-c05c-85b576b807fd"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense (Dense)               (None, 100)               1400      \n","                                                                 \n"," dense_1 (Dense)             (None, 50)                5050      \n","                                                                 \n"," dense_2 (Dense)             (None, 1)                 51        \n","                                                                 \n","=================================================================\n","Total params: 6,501\n","Trainable params: 6,501\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]}]}